/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.aml.vm.library.system.io

import com.google.common.truth.Truth.assertThat
import okio.EOFException
import okio.IOException
import kotlin.test.Test

class StringSourcePortTest {

    @Test
    fun testStringSourcePortPreservesName() {
        val name = "some string source port name that has no other meaning"
        val port = StringSourcePort("some irrelevant string source", name)

        assertThat(port.name)
            .isEqualTo(name)
    }

    @Test
    fun testStringSourceCanReadChars() {
        val port = StringSourcePort("some source", "a port name")

        assertThat(port.readChar().c)
            .isEqualTo('s'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('o'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('m'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('e'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo(' '.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('s'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('o'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('u'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('r'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('c'.toInt())
        assertThat(port.readChar().c)
            .isEqualTo('e'.toInt())

        try {
            port.readChar()
        } catch (error: IOException) {
            assertThat(error)
                .isInstanceOf(EOFException::class.java)
        }
    }
}
